name: Run Python tester
on:
  pull_request:
    branches: [main]
  push:
    branches: 
      - main
      - devs
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
            
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: '3.12'
          miniforge-variant: Mambaforge
          channels: conda-forge,defaults
          channel-priority: strict
          activate-environment: _environment
          
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          if [ -f environment.yml ]; then
            conda env update --file environment.yml
          else
            # Install from requirements.txt with conda
            conda install -y pytest coverage
            
            if [ -f requirements.txt ]; then
              while read requirement; do
                conda install -y $requirement || pip install $requirement
              done < requirements.txt
            fi
          fi

      - name: Check for test files
        id: check-tests
        shell: bash -l {0}
        run: |
            if find . -name "test_*.py" -o -name "*_test.py" | grep -q .; then
              echo "tests_exist=true" >> $GITHUB_OUTPUT
            else
              echo "tests_exist=false" >> $GITHUB_OUTPUT
            fi

      - name: Run testing
        if: steps.check-tests.outputs.tests_exist == 'true'
        shell: bash -l {0}
        run: |
            coverage run --source=. --omit="*/components/*,app.py" -m pytest
            coverage report

      - name: Skip testing
        if: steps.check-tests.outputs.tests_exist == 'false'
        shell: bash -l {0}
        run: echo "No test files found. Skipping tests."